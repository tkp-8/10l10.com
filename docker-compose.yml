services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.3
            dockerfile: Dockerfile
            args:
                WWWGROUP: "${WWWGROUP}"
                MYSQL_CLIENT: mariadb-client
                NODE_VERSION: "22"
        image: sail-8.3/app
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "${APP_PORT:-80}:80"
            - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
            XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
            IGNITION_LOCAL_SITES_PATH: "${PWD}"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            - mariadb
    mariadb:
        image: "mariadb:11"
        ports:
            - "${FORWARD_DB_PORT:-3306}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        volumes:
            - "sail-mariadb:/var/lib/mysql"
            - "./vendor/laravel/sail/database/mariadb/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - healthcheck.sh
                - "--connect"
                - "--innodb_initialized"
            retries: 3
            timeout: 5s
    phpmyadmin:
        image: phpmyadmin
        restart: always
        ports:
            - 8080:80
        environment:
            PMA_ARBITRARY: 1
            PMA_HOST: "mariadb"
            PMA_USER: "${DB_USERNAME}"
            PMA_PASSWORD: "${DB_PASSWORD}"
        networks:
            - sail
    https-portal:
        image: steveltn/https-portal:1
        ports:
            - "8443:443"
        environment:
            STAGE: local
            DOMAINS: "localhost -> http://host.docker.internal:80"
        extra_hosts:
            - "host.docker.internal:host-gateway"
    n8n:
        image: docker.n8n.io/n8nio/n8n
        restart: always
        ports:
            - "127.0.0.1:5678:5678"
        labels:
            - traefik.enable=true
            - traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)
            - traefik.http.routers.n8n.tls=true
            - traefik.http.routers.n8n.entrypoints=web,websecure
            - traefik.http.routers.n8n.tls.certresolver=mytlschallenge
            - traefik.http.middlewares.n8n.headers.SSLRedirect=true
            - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
            - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
            - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
            - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
            - traefik.http.middlewares.n8n.headers.SSLHost=${DOMAIN_NAME}
            - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
            - traefik.http.middlewares.n8n.headers.STSPreload=true
            - traefik.http.routers.n8n.middlewares=n8n@docker
        environment:
            - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
            - N8N_PORT=5678
            - N8N_PROTOCOL=https
            - NODE_ENV=production
            - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/

networks:
    sail:
        driver: bridge
volumes:
    sail-mariadb:
        driver: local
    n8n_storage:
        external: true
